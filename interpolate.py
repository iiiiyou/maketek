import numpy as np
from scipy.interpolate import NearestNDInterpolator


# Define the source and target points
def alignment(val):
    source_points = np.array(
        [
            [76, 362],
            [253, 362],
            [454, 362],
            [655, 362],
            [857, 362],
            [1060, 362],
            [1262, 362],
            [1464, 362],
            [1666, 362],
            [1868, 362],
            [2070, 362],
            [76, 562],
            [253, 562],
            [454, 562],
            [655, 562],
            [857, 562],
            [1060, 562],
            [1262, 562],
            [1464, 562],
            [1666, 562],
            [1868, 562],
            [2070, 562],
            [76, 763],
            [253, 763],
            [454, 763],
            [655, 763],
            [857, 763],
            [1060, 763],
            [1262, 763],
            [1464, 763],
            [1666, 763],
            [1868, 763],
            [2070, 763],
            [76, 965],
            [253, 965],
            [454, 965],
            [655, 965],
            [857, 965],
            [1060, 965],
            [1262, 965],
            [1464, 965],
            [1666, 965],
            [1868, 965],
            [2070, 965],
            [76, 1166],
            [253, 1166],
            [454, 1166],
            [655, 1166],
            [857, 1166],
            [1060, 1166],
            [1262, 1166],
            [1464, 1166],
            [1666, 1166],
            [1868, 1166],
            [2070, 1166],
            [76, 1367],
            [253, 1367],
            [454, 1367],
            [655, 1367],
            [857, 1367],
            [1060, 1367],
            [1262, 1367],
            [1464, 1367],
            [1666, 1367],
            [1868, 1367],
            [2070, 1367],
            [76, 1569],
            [253, 1569],
            [454, 1569],
            [655, 1569],
            [857, 1569],
            [1060, 1569],
            [1262, 1569],
            [1464, 1569],
            [1666, 1569],
            [1868, 1569],
            [2070, 1569],
            [76, 1770],
            [253, 1770],
            [454, 1770],
            [655, 1770],
            [857, 1770],
            [1060, 1770],
            [1262, 1770],
            [1464, 1770],
            [1666, 1770],
            [1868, 1770],
            [2070, 1770]
        ]
    )

    target_points = np.array(
        [
            [4, 1],
            [5, 1],
            [6, 1],
            [7, 1],
            [8, 1],
            [9, 1],
            [10, 1],
            [11, 1],
            [12, 1],
            [13, 1],
            [14, 1],
            [4, 2],
            [5, 2],
            [6, 2],
            [7, 2],
            [8, 2],
            [9, 2],
            [10, 2],
            [11, 2],
            [12, 2],
            [13, 2],
            [14, 2],
            [4, 3],
            [5, 3],
            [6, 3],
            [7, 3],
            [8, 3],
            [9, 3],
            [10, 3],
            [11, 3],
            [12, 3],
            [13, 3],
            [14, 3],
            [4, 4],
            [5, 4],
            [6, 4],
            [7, 4],
            [8, 4],
            [9, 4],
            [10, 4],
            [11, 4],
            [12, 4],
            [13, 4],
            [14, 4],
            [4, 5],
            [5, 5],
            [6, 5],
            [7, 5],
            [8, 5],
            [9, 5],
            [10, 5],
            [11, 5],
            [12, 5],
            [13, 5],
            [14, 5],
            [4, 6],
            [5, 6],
            [6, 6],
            [7, 6],
            [8, 6],
            [9, 6],
            [10, 6],
            [11, 6],
            [12, 6],
            [13, 6],
            [14, 6],
            [4, 7],
            [5, 7],
            [6, 7],
            [7, 7],
            [8, 7],
            [9, 7],
            [10, 7],
            [11, 7],
            [12, 7],
            [13, 7],
            [14, 7],
            [4, 8],
            [5, 8],
            [6, 8],
            [7, 8],
            [8, 8],
            [9, 8],
            [10, 8],
            [11, 8],
            [12, 8],
            [13, 8],
            [14, 8]
        ]
    )

    # Create the NearestNDInterpolator object
    interpolator = NearestNDInterpolator(source_points, target_points)

    if(val[0]==0):
        val[1]=0
        val[2]=0
        print(val)
        return val
    else:
        center_point = val[1:3]

    # Interpolate the query points
        interpolated_values = interpolator(center_point)

        print("inter----------------")

        z=1

        print(interpolated_values)
        x, y = interpolated_values[0]
        return z, x, y
    